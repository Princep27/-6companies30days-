Q3. Remove Zero Sum Consecutive Nodes from Linked List
Link : https://leetcode.com/problems/remove-zero-sum-consecutive-nodes-from-linked-list/

Solution :

    class Solution {
    public:
        ListNode* removeZeroSumSublists(ListNode* head) {
            vector<int> arr;
            ListNode *temp = head;
            while(temp){
                arr.push_back(temp->val);
                temp = temp->next;
            }

            unordered_map<int,int> mp;
            mp[0] = -1;
            int sum = 0, n = arr.size();
            for(int i=0;i<n;i++){
                sum += arr[i];

                if(mp.find(sum) != mp.end()){
                    int j = mp[sum];

                    mp.erase(sum);
                    for(int k=i;k>=j+1;k--){
                       sum -= arr[k];
                       arr[k] = 0;
                       mp.erase(sum);
                    }
                }

                mp[sum] = i;
            }

            for(int i=0;i<n;i++)
               cout<<arr[i]<<" ";
            cout<<endl;

            vector<int> ans;
            for(int i=0;i<n;i++)
               if(arr[i]) ans.push_back(arr[i]);

            temp = head;
            int i = 0,m = ans.size();

            if(m == 0)  return NULL;
            while(i < m){
                temp->val = ans[i];
                if(i == m-1)
                   temp->next = NULL;

                i++;
                temp = temp->next;
            }

            return head;
        }
    };
