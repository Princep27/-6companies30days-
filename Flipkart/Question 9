Q9. Top K Frequent Words
Link : https://leetcode.com/problems/top-k-frequent-words/

Solution : 

    class Solution {
    public:
        class comp{
           public: 
           bool operator()(pair<int,string> a,pair<int,string> b){
                if(a.first == b.first)
                    return a.second < b.second;
                return a.first > b.first;
            }
        };

        vector<string> topKFrequent(vector<string>& words, int k) {
            unordered_map<string,int> mp;
            int n = words.size();

            for(int i=0;i<n;i++){
                mp[words[i]]++;
            }

            priority_queue< pair<int,string> ,vector<pair<int,string>> ,comp > pq; 
            for(auto it:mp){
                pq.push(make_pair(it.second,it.first));
                if(pq.size() > k)
                  pq.pop();
            }

            vector<string> ans;
            for(int i=0;i<k;i++){
                ans.push_back(pq.top().second);
                pq.pop();
            }

            reverse(ans.begin(),ans.end());
            return ans;
        }
    };
