Q10. Shortest Unsorted continuous Subarray
Link : https://leetcode.com/problems/shortest-unsorted-continuous-subarray/

Solution : 
 ----------------------------------------------------------------------------------------------------       
        O(n) solution 

        class Solution {
        public:
            int findUnsortedSubarray(vector<int>& nums) {
                vector<int> sorted = nums;
                int n = nums.size();
                int l = n, r = -1;
                int maxi = INT_MIN;
                int mini = INT_MAX;

                for(int i=0;i<n;i++){
                    if(nums[i] >= maxi){
                        maxi = nums[i];
                    }else{
                        l = min(l,i);
                        r = max(r,i);
                    }
                }

                for(int i=n-1;i>=0;i--){
                    if(nums[i] <= mini){
                        mini = nums[i];
                    }else{
                        l = min(l,i);
                        r = max(r,i);
                    }
                }

                if(l == n)
                    return 0;
                else
                   return r-l+1;
            }
        };
        
--------------------------------------------------------------------------------------------------------------
  O(nlogn) Solution: 
   
                class Solution {
          public:
              int findUnsortedSubarray(vector<int>& nums) {
                  vector<int> sorted = nums;
                  int n = nums.size();
                  sort(sorted.begin(),sorted.end());

                  int l = n, r = -1;
                  for(int i=0;i<n;i++){
                      if(sorted[i] != nums[i]){
                          l = min(l,i);
                          r = max(r,i);
                      }
                  }

                  if(l == n)
                      return 0;
                  else
                      return r-l+1;
              }
          };
          
---------------------------------------------------------------------------------------------------------------
