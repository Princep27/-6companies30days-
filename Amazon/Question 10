Q10. Number of Matching Subsequence
soltuion : Link : https://leetcode.com/problems/number-of-matching-subsequences/submissions/878184664/
class Solution {
public:
    int count = 0;
    unordered_map<char,vector<int>> mp;

    void check(string str){
        int n = str.length();
        int index = -1;

        for(int i=0;i<n;i++){

            int m = mp[str[i]].size();
            auto id = upper_bound(mp[str[i]].begin(),mp[str[i]].end(),index) - mp[str[i]].begin();
            if(id == m)
              return;
            index = mp[str[i]][id];
        }
        count++;
    }

    int numMatchingSubseq(string s, vector<string>& words) {
        int n = s.length();
        for(int i=0;i<n;i++){
            mp[s[i]].push_back(i);
        }
        
        int m = words.size();
        for(int i=0;i<m;i++){
            check(words[i]);
        }
        return count;
    }
};
